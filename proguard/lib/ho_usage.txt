de.hattrickorganizer.credits.DynamicEffectLayer:
    44:44:public final de.hattrickorganizer.credits.Zeitsteuerung getZeitsteuerung()
    248:249:public final void removeDynamischenEffekt(de.hattrickorganizer.credits.DynamischesObjekt)
    271:271:public final int size()
de.hattrickorganizer.credits.FontEffect:
    72:73:public final void setAlpha(java.awt.AlphaComposite)
de.hattrickorganizer.credits.GraphicLibrary:
    62:75:private static java.awt.Image cache(java.awt.Image)
    82:96:private static java.awt.Image drehen(java.awt.Image,double)
    102:121:private static java.awt.Image loadImage(java.lang.String)
de.hattrickorganizer.credits.HeroTest
de.hattrickorganizer.credits.StaticEffectLayer:
    private int sOCounter
    89:95:public final void addStatischenEffekt(int,int)
    129:129:public final int size()
de.hattrickorganizer.credits.TestFilter
de.hattrickorganizer.credits.VAPCredits:
    326:329:private boolean isTime(int)
de.hattrickorganizer.database.AbstractTable
de.hattrickorganizer.database.ColumnDescriptor
de.hattrickorganizer.database.DBInfo:
    12:13:public java.lang.String getTypeName(int)
de.hattrickorganizer.database.DBZugriff:
    1462:1477:public int getHrfIdByName(java.lang.String)
    2364:2388:public de.hattrickorganizer.model.Spieler getSpielerBeforeDate(java.sql.Timestamp,int)
    2515:2571:public double[][] getSpielerFinanzDaten4Statistik(int,int)
    2948:2962:public de.hattrickorganizer.model.TrainingPerWeek getTraining(int,int)
    2993:3014:public java.util.List getFutureTrainingsVector()
    3026:3042:public int getTrainingsartByHRFID(int)
    3253:3296:public boolean gleicheTrainingsWoche(java.sql.Timestamp,java.sql.Timestamp)
    4064:4075:public void saveTraining(de.hattrickorganizer.model.TrainingPerWeek)
    4083:4094:public void saveFutureTraining(plugins.IFutureTrainingWeek)
    5112:5113:private void deleteSpielerNotizTabelle(java.lang.String[],java.lang.String[])
    5147:5148:private void deleteTraining(java.lang.String[],java.lang.String[])
    5221:5236:protected void createTable(de.hattrickorganizer.database.AbstractTable)
    5239:5254:public int delete(de.hattrickorganizer.database.AbstractTable,java.lang.String[],java.lang.String[])
de.hattrickorganizer.database.FactorsTable
de.hattrickorganizer.database.FirstStart:
    private static final int DBVersion
de.hattrickorganizer.database.JDBCAdapter:
    171:171:public de.hattrickorganizer.database.DBInfo getDBInfo()
de.hattrickorganizer.gui.HOMainFrame:
    public static final double VERSION
    public static final java.lang.String VERSIONSTRING
    public static final int SPRACHVERSION
    private static final boolean LIMITED
    private static final java.lang.String LIMITED_DATE
    public static final int SPIELERUEBERSICHT
    public static final int AUFSTELLUNG
    public static final int LIGATABELLE
    public static final int SPIELE
    public static final int SPIELERANALYSE
    public static final int STATISTIK
    public static final int TRANSFERSCOUT
    public static final int ARENASIZER
    public static final int INFORMATIONEN
    270:270:public de.hattrickorganizer.gui.arenasizer.ArenaSizerPanel getArenaSizerPanel()
    297:297:public de.hattrickorganizer.gui.info.InformationsPanel getInformationsPanel()
    333:333:public javax.swing.JTabbedPane getTabbedPane()
    667:668:public void addMainFrameListener(java.awt.event.WindowListener)
    676:677:public void addMenu(javax.swing.JMenu)
    685:686:public void addTopLevelMenu(javax.swing.JMenu)
    1246:1248:public void addOptionPanel(java.lang.String,javax.swing.JPanel)
    1285:1286:public void removeMainFrameListener(java.awt.event.WindowListener)
    1733:1746:private void showFlagDialog()
    1752:1764:private void testTrickotnummern()
de.hattrickorganizer.gui.InfoPanel:
    57:58:public final void setKurzInfoText(java.lang.String)
    97:99:public final void changeProgressbarValue(int)
    105:108:public final void clearAll()
    114:115:public final void clearKurzInfo()
    129:130:public final void clearProgressbar()
de.hattrickorganizer.gui.arenasizer.ArenaPanel:
    protected static final byte HRFARENA
    protected static final byte TESTARENA
de.hattrickorganizer.gui.hoFriendly.HOFriendlyDialog:
    public boolean m_bPause
    109:109:public final de.hattrickorganizer.net.rmiHOFriendly.Chat getChat()
    118:119:public final void setPause(boolean)
    127:127:public final boolean isPause()
    866:869:public final void drawSpielstand(de.hattrickorganizer.model.Spielbericht)
de.hattrickorganizer.gui.hoFriendly.MannschaftsPanel
de.hattrickorganizer.gui.hoFriendly.SpielstandPanel:
    81:81:public final java.lang.String getGastmannschaft()
    109:111:public final void setGasttore(java.util.Vector)
    119:119:public final java.util.Vector getGasttore()
    138:138:public final java.lang.String getHeimmannschaft()
    166:168:public final void setHeimtore(java.util.Vector)
    176:176:public final java.util.Vector getHeimtore()
    195:195:public final int getSpielminute()
de.hattrickorganizer.gui.hoFriendly.TrainerLibrary:
    public static transient java.awt.Image Trainer1_trau_7
    public static transient java.awt.Image Trainer2_trau_7
    572:577:public static de.hattrickorganizer.gui.model.TrainerSequenz getWarten(boolean,int)
    616:630:private static java.awt.Image drehen(java.awt.Image,double)
de.hattrickorganizer.gui.league.LigaTabellePanel:
    104:104:public static java.lang.String getMarkierterVerein()
de.hattrickorganizer.gui.league.SpieltagPanel:
    public static final int NAECHSTER_SPIELTAG
    public static final int LETZTER_SPIELTAG
de.hattrickorganizer.gui.lineup.AufstellungsDetailPanel:
    208:209:public void setEinstellung(int)
    217:217:public int getEinstellung()
    427:428:public void setTaktik(int)
de.hattrickorganizer.gui.lineup.AufstellungsRatingPanel:
    public static final boolean REIHENFOLGE_STURM2VERTEIDIGUNG
    public static final boolean REIHENFOLGE_VERTEIDIGUNG2STURM
    246:249:protected void setReihenfolge(boolean)
de.hattrickorganizer.gui.lineup.SpielerPositionsPanel:
    protected static final int SPIELFUEHRER
    protected static final int STANDARD
de.hattrickorganizer.gui.login.LoginWaitDialog:
    106:106:public final int getValue()
de.hattrickorganizer.gui.matches.ManschaftsBewertungsPanel:
    734:752:private int getDifferenz(int,java.lang.String,int,java.lang.String)
de.hattrickorganizer.gui.matches.SpielePanel:
    595:604:private void manageSelectionRow()
de.hattrickorganizer.gui.matches.SpielerSternePanel:
    54:55:protected SpielerSternePanel(int)
de.hattrickorganizer.gui.matchprediction.MatchEnginePanel
de.hattrickorganizer.gui.matchprediction.MatchResultTable
de.hattrickorganizer.gui.matchprediction.MatchScoreDiffTable
de.hattrickorganizer.gui.matchprediction.MatchScoreTable
de.hattrickorganizer.gui.matchprediction.PredictPanel
de.hattrickorganizer.gui.matchprediction.RatingItem
de.hattrickorganizer.gui.matchprediction.TeamRatingPanel
de.hattrickorganizer.gui.menu.option.ComboBoxPanel:
    84:85:public final void removeChangeListener(java.awt.event.ItemListener)
de.hattrickorganizer.gui.model.AbstractMatchTableModel
de.hattrickorganizer.gui.model.ArenaStatistikModel:
    147:147:public final java.lang.String getHeimName()
    201:201:public final java.lang.String getMatchDate()
    350:362:public final int compareTo(java.lang.Object)
de.hattrickorganizer.gui.model.ArenaStatistikTableModel:
    292:300:public final de.hattrickorganizer.gui.model.ArenaStatistikModel getMatch(int)
    321:330:public final java.lang.Object getValue(int,java.lang.String)
    369:373:public final void setValues(de.hattrickorganizer.gui.model.ArenaStatistikModel[],int,int)
de.hattrickorganizer.gui.model.AufstellungCBItem:
    48:49:public final void setAufstellung(de.hattrickorganizer.model.Aufstellung)
    66:67:public final void setText(java.lang.String)
de.hattrickorganizer.gui.model.AufstellungSpielerTableModel:
    416:426:public final java.lang.Object getValue(int,java.lang.String)
    484:486:public final void addSpieler(de.hattrickorganizer.model.Spieler,int)
    557:559:public final void removeSpieler(de.hattrickorganizer.model.Spieler)
de.hattrickorganizer.gui.model.CBItem:
    42:43:public final void setId(int)
    60:61:public final void setText(java.lang.String)
de.hattrickorganizer.gui.model.ColumnGroup
de.hattrickorganizer.gui.model.ColumnGroup$1
de.hattrickorganizer.gui.model.Ergebnis
de.hattrickorganizer.gui.model.GeldFaktorCBItem:
    34:35:public final void setFaktor(float)
de.hattrickorganizer.gui.model.GroupableTableHeader
de.hattrickorganizer.gui.model.GroupableTableHeaderUI
de.hattrickorganizer.gui.model.MatchResultTableModel
de.hattrickorganizer.gui.model.MatchScoreDiffTableModel
de.hattrickorganizer.gui.model.MatchScoreTableModel
de.hattrickorganizer.gui.model.SkillAenderungsTableModel
de.hattrickorganizer.gui.model.SpieleTableModel:
    255:264:public final java.lang.Object getValue(int,java.lang.String)
de.hattrickorganizer.gui.model.SpielerCBItem:
    94:95:public final void setPositionsBewertung(float)
    112:113:public final void setSpieler(plugins.ISpieler)
    130:131:public final void setText(java.lang.String)
    139:139:public final java.lang.String getText()
de.hattrickorganizer.gui.model.SpielerMatchCBItem:
    74:75:public final void setGastID(int)
    83:83:public final int getGastID()
    92:93:public final void setGastteam(java.lang.String)
    110:111:public final void setHeimID(int)
    119:119:public final int getHeimID()
    128:129:public final void setHeimteam(java.lang.String)
    146:147:public final void setMatchID(int)
    164:165:public final void setMatchTyp(int)
    182:183:public final void setMatchdate(java.lang.String)
    218:219:public final void setPosition(int)
    236:237:public final void setRating(float)
de.hattrickorganizer.gui.model.SpielerMatchesTableModel:
    516:526:public final java.lang.Object getValue(int,java.lang.String)
de.hattrickorganizer.gui.model.SpielerPositionTableModel:
    153:163:public final java.lang.Object getValue(int,java.lang.String)
de.hattrickorganizer.gui.model.SpielerUebersichtTableModel:
    494:504:public final java.lang.Object getValue(int,java.lang.String)
    551:553:public final void addSpieler(de.hattrickorganizer.model.Spieler,int)
    648:650:public final void removeSpieler(de.hattrickorganizer.model.Spieler)
de.hattrickorganizer.gui.model.StatistikModel:
    61:62:public final void setColor(java.awt.Color)
    79:80:public final void setFaktor(double)
    97:98:public final void setFormat(java.text.NumberFormat)
    145:146:public final void setName(java.lang.String)
    181:182:public final void setWerte(double[])
de.hattrickorganizer.gui.model.TrainerSequenz:
    46:46:public final int getAktuellenDurchlauf()
    55:55:public final int getAktuellerImageIndex()
de.hattrickorganizer.gui.model.TrainingsTableModel
de.hattrickorganizer.gui.model.TransferTableModel:
    433:442:public final java.lang.Object getValue(int,java.lang.String)
    479:481:public final void setValues(java.util.Vector)
de.hattrickorganizer.gui.model.VAPTableModel:
    58:59:public final void setCellEditable(boolean)
    128:138:public final java.lang.Object getValue(int,java.lang.String)
    171:173:public final void setValues(java.lang.String[],java.lang.Object[][])
de.hattrickorganizer.gui.playeranalysis.SpielerAnalysePanel:
    98:98:public final int getDividerLocations()
de.hattrickorganizer.gui.playeranalysis.SpielerMatchesTable:
    55:55:public de.hattrickorganizer.gui.utils.TableSorter getSorter()
de.hattrickorganizer.gui.playeranalysis.SpielerPositionTable:
    55:55:public de.hattrickorganizer.gui.utils.TableSorter getSorter()
de.hattrickorganizer.gui.playeroverview.SpielerStatusLabelEntry:
    42:44:public final void setServerSpieler(de.hattrickorganizer.model.ServerSpieler)
de.hattrickorganizer.gui.playeroverview.SpielerTransferable
de.hattrickorganizer.gui.pluginWrapper.DebugMessagePanel:
    68:69:public final void clear()
de.hattrickorganizer.gui.pluginWrapper.DebugWindow:
    74:75:public final void clear()
de.hattrickorganizer.gui.pluginWrapper.GUIPluginWrapper:
    static java.lang.Class class$0
    62:65:public void addHOTableRenderer(javax.swing.JTable)
    73:74:public void addMainFrameListener(java.awt.event.WindowListener)
    82:83:public void addMenu(javax.swing.JMenu)
    92:93:public void addOptionPanel(java.lang.String,javax.swing.JPanel)
    101:102:public void addPlayerComboboxRenderer(javax.swing.JComboBox)
    111:112:public void addTab(java.lang.String,javax.swing.JPanel)
    120:121:public void addTopLevelMenu(javax.swing.JMenu)
    131:131:public javax.swing.JPanel createBallPanel(int)
    153:153:public javax.swing.JPanel createGrassPanel()
    175:175:public javax.swing.JPanel createMatchPredictionPanel(plugins.IMPTeamData,plugins.IMPTeamData)
    194:198:public plugins.IHOTableEntry createPlayerTableEntry(plugins.ISpieler,int,byte,float,boolean,boolean)
    214:214:public plugins.ISpielerComboboxItem createSpielerComboboxItem(java.lang.String,float,plugins.ISpieler)
    226:226:public javax.swing.JPanel createStarPanel(int,boolean)
    239:242:public javax.swing.JWindow createWaitDialog(java.awt.Window)
    252:253:public void doLineupRefresh()
    260:261:public void doRefresh()
    272:284:public void print(java.lang.String,javax.swing.JPanel)
    292:293:public void registerRefreshable(plugins.IRefreshable)
    301:302:public void removeMainFrameListener(java.awt.event.WindowListener)
    310:311:public void unregisterRefreshable(plugins.IRefreshable)
de.hattrickorganizer.gui.print.LineUp
de.hattrickorganizer.gui.print.LineUpRow
de.hattrickorganizer.gui.print.LineUpRow$LineUpBox
de.hattrickorganizer.gui.print.PrintController:
    63:64:public void setPf(java.awt.print.PageFormat)
de.hattrickorganizer.gui.skillupdate.SkillAenderungsPanel
de.hattrickorganizer.gui.skillupdate.SkillAenderungsTable
de.hattrickorganizer.gui.statistic.ArenaStatistikTable:
    49:49:public final de.hattrickorganizer.gui.utils.TableSorter getSorter()
    58:65:public final void markiereMatch(int)
de.hattrickorganizer.gui.statistic.ImageCheckbox:
    98:99:public final void setIcon(javax.swing.ImageIcon)
    107:107:public final javax.swing.JLabel getLabel()
    116:117:public final void setSelected(boolean)
    134:135:public final void setText(java.lang.String)
de.hattrickorganizer.gui.statistic.SpielerFinanzenStatistikPanel
de.hattrickorganizer.gui.statistic.StatistikPanel:
    154:156:public final void setModel(de.hattrickorganizer.gui.model.StatistikModel[])
    164:164:public final de.hattrickorganizer.gui.model.StatistikModel[] getModel()
    175:181:public final de.hattrickorganizer.gui.model.StatistikModel getModel(java.lang.String)
    231:252:public final java.lang.String formatedDouble(double,byte)
de.hattrickorganizer.gui.templates.ColorLabelEntry:
    127:136:public ColorLabelEntry(java.lang.String,javax.swing.Icon,java.awt.Color,java.awt.Color,int)
    195:196:public ColorLabelEntry(int,java.awt.Color)
    320:321:public ColorLabelEntry(int)
    339:340:public ColorLabelEntry(float,boolean)
    350:351:public ColorLabelEntry(int,java.awt.Color,boolean)
    361:397:public ColorLabelEntry(int,java.awt.Color,boolean,boolean)
    516:518:public final void setBGColor(java.awt.Color)
    577:579:public final void setCurrency(float)
    617:618:public final void setGrafischeVeraenderungswert(int)
    728:731:public final void setIcon(javax.swing.Icon,int)
    740:743:public final void setIconWithSort(javax.swing.Icon,double)
de.hattrickorganizer.gui.templates.DoppelLabel:
    private javax.swing.JLabel m_jlLinks
    private javax.swing.JLabel m_jlRechts
    29:34:public DoppelLabel(java.awt.Color)
    43:46:public DoppelLabel(javax.swing.JLabel,javax.swing.JLabel)
    66:72:public final void setLabels(javax.swing.JLabel,javax.swing.JLabel)
    80:80:public final javax.swing.JLabel getLinks()
    89:89:public final javax.swing.JLabel getRechts()
    96:100:public final void clear()
de.hattrickorganizer.gui.templates.DoppelLabelEntry:
    115:115:public final de.hattrickorganizer.gui.templates.TableEntry getTableRechts()
de.hattrickorganizer.gui.templates.ImagePanel:
    57:59:public ImagePanel(java.awt.LayoutManager,boolean)
de.hattrickorganizer.gui.templates.ProgressbarTableEntry:
    59:61:public final void setAddText(java.lang.String)
    69:69:public final java.lang.String getAddText()
    78:80:public final void setAktuellerWert(int)
    97:99:public final void setBGColor(java.awt.Color)
    107:107:public final java.awt.Color getBGColor()
    135:137:public final void setFGColor(java.awt.Color)
    145:145:public final java.awt.Color getFGColor()
    154:156:public final void setFaktor4Label(double)
    164:164:public final double getFaktor4Label()
    173:175:public final void setMaxWert(int)
    183:183:public final int getMaxWert()
    192:194:public final void setMinWert(int)
    202:202:public final int getMinWert()
    211:213:public final void setNachkommastellen(int)
    221:221:public final int getNachkommastellen()
de.hattrickorganizer.gui.templates.RasenPanel:
    36:38:public RasenPanel(java.awt.LayoutManager)
de.hattrickorganizer.gui.templates.RatingTableEntry:
    258:258:public final boolean isYellowStar()
de.hattrickorganizer.gui.templates.SkillEntry:
    53:57:public SkillEntry(double)
    84:86:public final void setBGColor(java.awt.Color)
    113:115:public final void setFGColor(java.awt.Color)
    123:125:public final void setZahl(double)
de.hattrickorganizer.gui.templates.SpielerLabelEntry:
    118:138:public static java.awt.Color getForegroundForSpieler(de.hattrickorganizer.model.Spieler)
de.hattrickorganizer.gui.templates.TableEntry:
    public abstract void createComponent()
de.hattrickorganizer.gui.templates.TorLabelEntry
de.hattrickorganizer.gui.training.TrainingsPanel
de.hattrickorganizer.gui.training.TrainingsTable
de.hattrickorganizer.gui.transferscout.TransferTable:
    45:45:public final de.hattrickorganizer.gui.utils.TableSorter getSorter()
de.hattrickorganizer.gui.utils.ExampleFileFilter:
    79:80:public ExampleFileFilter(java.lang.String)
    90:99:public ExampleFileFilter(java.lang.String,java.lang.String)
    108:109:public ExampleFileFilter(java.lang.String[])
    119:129:public ExampleFileFilter(java.lang.String[],java.lang.String)
    221:223:public final void setExtensionListInDescription(boolean)
de.hattrickorganizer.gui.utils.InterruptionWindow:
    122:125:private java.awt.Image changeColor(java.awt.Image,java.awt.Color,java.awt.Color)
de.hattrickorganizer.gui.utils.OnlineWorker:
    731:744:protected final java.lang.String getDate()
de.hattrickorganizer.gui.utils.PrintablePanel
de.hattrickorganizer.gui.utils.TableSorter:
    346:353:public final void n2sort()
    421:422:public final void sortByColumn(int)
    446:449:public final void swap(int,int)
de.hattrickorganizer.logik.ArenaSizer:
    public static final float STEH_EINTRITT
    public static final float SITZ_EINTRITT
    public static final float DACH_EINTRITT
    public static final float LOGEN_EINTRITT
    public static final float STEH_UNTERHALT
    public static final float SITZ_UNTERHALT
    public static final float DACH_UNTERHALT
    public static final float LOGEN_UNTERHALT
    public static final float STEH_PROZENT
    public static final float SITZ_PROZENT
    public static final float DACH_PROZENT
    public static final float LOGEN_PROZENT
    public static final int FANS_GUT
    public static final int FANS_NORMAL
    public static final int FANS_SCHLECHT
de.hattrickorganizer.logik.Aufstellungsassistent:
    public static final byte AW_MF_ST
    public static final byte AW_ST_MF
    public static final byte MF_ST_AW
    public static final byte MF_AW_ST
    public static final byte ST_AW_MF
    public static final byte ST_MF_AW
de.hattrickorganizer.logik.EPV:
    35:36:public final plugins.IEPVData getEPVData(plugins.ISpieler)
    43:43:public final double getPrice(plugins.IEPVData)
    55:55:public final double getPrice(plugins.IEPVData,int)
de.hattrickorganizer.logik.EPVCalculator
de.hattrickorganizer.logik.FutureTrainingManager
de.hattrickorganizer.logik.HOFriendlyManager:
    41:91:public final void doClient(java.lang.String,int)
    101:162:public final void doServer(java.lang.String,int,boolean)
    168:194:public final void doStandardFriendly()
    201:204:public final void showIpAdressPage()
de.hattrickorganizer.logik.MatchPlayerRetriever:
    105:106:public final void clear()
de.hattrickorganizer.logik.SpielLogik:
    public static final int CHANCEN_ZUFALLS_RAUM
    public static final float ABWEHR_MANIPULATOR
    public static final float STURM_MANIPULATOR
    public static final byte AVG_TORCHANCEN
    public static final byte OB_BONUS
    public static final float ESB_OBERGRENZE
    public static final float ESB_UNTERGRENZE
    public static final byte ESB_STEUERUNG
    public static final byte ESB_FAKTOR_STURM
    public static final byte ESB_FAKTOR_ABWEHR
    public static final byte ESB_OFFENSIVGRENZE
    public static final byte ESB_OFFENSIVANPASSUNG
    public static final byte TA_FELDTOR_STARKER_FUSS
    public static final byte TA_EIGENTOR
    public static final byte TA_FELDTOR_SCHWACHER_FUSS
    public static final byte TA_FELDTOR_PER_KOPF
    public static final byte TA_TOR_NACH_FREISTOSS
    public static final byte TA_DIREKTER_FREISTOSS
    public static final byte TA_TOR_NACH_ECKE
    public static final byte TA_HANDELFMETER
    public static final byte TA_FOULELFMETER
    public static final byte TA_NORMAL
    public static final byte TA_SELTEN
    public static final byte KEY_AUSWECHSLUNG
    public static final byte KEY_VORTEXT
    public static final byte KEY_HALBZEIT
    public static final byte KEY_SPIELENDE
    public static final byte KEY_NACHSPIELZEIT
    public static final byte KEY_VERLAENGERUNG
    public static final byte KEY_ELFMETERSCHIESSEN
    public static final byte KEY_FANGESANG
    public static final byte FG_ANFEUERUNG
    public static final byte FG_GEGNER
    public static final byte FG_SONSTIGES
    public static final byte FG_SCHIRI
    public static final byte KEY_ROTEKARTE
    public static final byte KEY_GELBEKARTE
    public static final byte KEY_GELBROTEKARTE
    public static final byte GFK_MECKERN
    public static final byte GFK_UNSPORTLICHES_VERHALTEN
    public static final byte GFK_FOUL
    public static final byte GFK_ABSICHTLICHES_HANDSPIEL
    public static final byte KEY_VERLETZUNG
    public static final byte VA_BAENDERVERLETZUNG
    public static final byte VA_MUSKELVERLETZUNG
    public static final byte VA_PRELLUNG
    public static final byte VA_KNOCHENBUCH
    public static final byte VA_GELENKSCHADEN
    public static final byte VA_BLUTENDEWUNDE
    public static final byte MT_TORWART
    public static final byte MT_ABWEHR
    public static final byte MT_MITTELFELD
    public static final byte MT_STURM
    public static final byte ANGRIFF_ERFOLGREICH
    public static final byte ANGRIFF_TORWART_HAELT
    public static final byte ANGRIFF_ABWEHR_KLAERT
    public static final byte ANGRIFF_MITTELFELD_KLAERT
    271:271:public final int getSpielgeschwindigkeit()
    1087:1088:public final void seSpielgeschwindigkeit(int)
    1535:1535:protected final int doNachspielzeitBerechnen(de.hattrickorganizer.model.Spielbericht)
    1849:1850:protected final void sendInfoMsg(byte,int)
de.hattrickorganizer.logik.TrainingsManager:
    94:94:public plugins.ITrainingWeek getLastTrainingWeek(int)
    105:105:public java.util.Vector getPlayerTrainingsVector()
    114:114:public plugins.ITrainingPoint getTrainingPoint()
    133:133:public java.util.Vector calculateData(java.util.Vector,java.sql.Timestamp)
    150:150:public plugins.ITrainingPerPlayer calculateDataForPlayer(plugins.ISpieler,java.util.Vector,java.sql.Timestamp)
    617:617:public void fillWithData(java.util.Vector)
    626:633:public void recalcSubskills(boolean)
de.hattrickorganizer.logik.TrainingsWeekManager:
    108:109:public void setTrainings(java.util.Vector)
de.hattrickorganizer.logik.matchengine.MatchPredictionManager
de.hattrickorganizer.logik.matchengine.TeamData
de.hattrickorganizer.logik.matchengine.TeamRatings
de.hattrickorganizer.logik.matchengine.engine.common.Action
de.hattrickorganizer.logik.matchengine.engine.common.MatchData
de.hattrickorganizer.logik.matchengine.engine.common.TeamGameData
de.hattrickorganizer.logik.matchengine.engine.core.ActionGenerator
de.hattrickorganizer.logik.matchengine.engine.core.BaseActionGenerator
de.hattrickorganizer.logik.matchengine.engine.core.CounterAttackGenerator
de.hattrickorganizer.logik.matchengine.engine.core.Utility
de.hattrickorganizer.logik.price.Calculator
de.hattrickorganizer.logik.price.PsicoTsiTool
de.hattrickorganizer.logik.xml.XMLArenaParser:
    41:45:public final java.util.Hashtable parseArena(java.lang.String)
    56:60:public final java.util.Hashtable parseArena(java.io.File)
de.hattrickorganizer.logik.xml.XMLClubParser:
    64:68:public final de.hattrickorganizer.model.Verein parseClub(java.io.File)
de.hattrickorganizer.logik.xml.XMLMatchLineupParser:
    71:75:public final de.hattrickorganizer.model.matches.MatchLineup parseMatchLineup(java.io.File)
de.hattrickorganizer.logik.xml.XMLMatchesParser:
    77:81:public final de.hattrickorganizer.model.matches.MatchKurzInfo[] parseMatches(java.io.File)
de.hattrickorganizer.logik.xml.XMLMenuParser:
    36:40:public final java.lang.String parseMenu(java.lang.String)
    51:55:public final java.lang.String parseMenuFromFile(java.io.File)
de.hattrickorganizer.logik.xml.XMLPlayerParser:
    68:72:public final java.util.Vector parsePlayer(java.io.File)
de.hattrickorganizer.logik.xml.XMLSpielplanParser:
    81:85:public final de.hattrickorganizer.model.matchlist.Spielplan parseSpielplan(java.io.File)
de.hattrickorganizer.logik.xml.XMLTrainingParser:
    41:45:public final java.util.Hashtable parseTraining(java.lang.String)
    56:60:public final java.util.Hashtable parseTraining(java.io.File)
de.hattrickorganizer.logik.xml.xmlEconomyParser:
    41:45:public final java.util.Hashtable parseEconomy(java.lang.String)
    56:60:public final java.util.Hashtable parseEconomy(java.io.File)
de.hattrickorganizer.logik.xml.xmlMatchArchivParser:
    40:44:public final de.hattrickorganizer.model.matches.MatchKurzInfo[] parseMatches(java.lang.String)
    55:59:public final de.hattrickorganizer.model.matches.MatchKurzInfo[] parseMatches(java.io.File)
    85:85:protected final int getStatus(java.lang.String)
de.hattrickorganizer.logik.xml.xmlMatchOrderParser:
    42:46:public final java.util.Hashtable parseMatchOrder(java.lang.String)
    57:61:public final java.util.Hashtable parseMatchOrder(java.io.File)
    310:471:protected final java.util.Hashtable parseVersion1_1(org.w3c.dom.Document)
de.hattrickorganizer.logik.xml.xmlMatchdetailsParser:
    81:85:public final de.hattrickorganizer.model.matches.Matchdetails parseMatchdetails(java.io.File)
    149:185:protected final void readCards(org.w3c.dom.Document,de.hattrickorganizer.model.matches.Matchdetails)
    224:264:protected final void readGoals(org.w3c.dom.Document,de.hattrickorganizer.model.matches.Matchdetails)
de.hattrickorganizer.logik.xml.xmlTeamDetailsParser:
    42:62:public final java.lang.String fetchRegionID(java.lang.String)
    85:89:public final java.util.Hashtable parseTeamdetails(java.lang.String)
    100:104:public final java.util.Hashtable parseTeamdetails(java.io.File)
de.hattrickorganizer.model.Aufstellung:
    public static final java.lang.String DEFAULT_NAME
    public static final java.lang.String DEFAULT_NAMELAST
    public static final int NO_HRF_VERBINDUNG
    203:203:public final float getAttackSTK()
    478:478:public final float getKonterSTK()
    659:661:public final byte getEffectivePos4PositionID(int)
    796:796:public final float getPressingSTK()
    982:982:public final boolean isSpielerInReserve(int)
    994:994:public final java.lang.String getSystemName(byte)
    1028:1048:public final float getTacticLevel(int)
    1120:1121:public final void AufstellungsSystemLoeschen(java.lang.String)
    1170:1194:public final void dump()
    1370:1377:public final void load(java.lang.String)
    1383:1392:public final void load4HRF()
    1405:1408:public final void loadAufstellungsSystem(java.lang.String)
    1451:1455:public final void save4HRF()
    1463:1465:public final void saveAufstellungsSystem(java.lang.String)
    1593:1632:private void dumpValues()
    1638:1661:private void initPositionen352()
de.hattrickorganizer.model.Basics:
    114:115:public void setDatum(java.sql.Timestamp)
    158:159:public void setLand(int)
    176:177:public void setLiga(int)
    194:195:public void setManager(java.lang.String)
    212:213:public void setSeason(int)
    230:231:public void setSpieltag(int)
    248:249:public void setTeamId(int)
    266:267:public void setTeamName(java.lang.String)
de.hattrickorganizer.model.EPVData
de.hattrickorganizer.model.Finanzen:
    public static final int LV_vergoettern_Dich
    public static final int LV_im_siebten_Himmel
    public static final int LV_euphorisch
    public static final int LV_uebergluecklich
    public static final int LV_gluecklich
    public static final int LV_zufrieden
    public static final int LV_ruhig
    public static final int LV_irritiert
    public static final int LV_wuetend
    public static final int LV_blutduerstig
    288:289:public final void setEinnahmenGesamt(int)
    306:307:public final void setEinnahmenSonstige(int)
    324:325:public final void setEinnahmenSponsoren(int)
    342:343:public final void setEinnahmenZinsen(int)
    360:361:public final void setEinnahmenZuschauer(int)
    378:379:public final void setFinanzen(int)
    396:397:public final void setGewinnVerlust(int)
    414:415:public final void setKostenGesamt(int)
    432:433:public final void setKostenJugend(int)
    450:451:public final void setKostenSonstige(int)
    468:469:public final void setKostenSpieler(int)
    486:487:public final void setKostenStadion(int)
    504:505:public final void setKostenTrainerstab(int)
    522:523:public final void setKostenZinsen(int)
    540:541:public final void setLetzteEinnahmenGesamt(int)
    558:559:public final void setLetzteEinnahmenSonstige(int)
    576:577:public final void setLetzteEinnahmenSponsoren(int)
    594:595:public final void setLetzteEinnahmenZinsen(int)
    612:613:public final void setLetzteEinnahmenZuschauer(int)
    630:631:public final void setLetzteGewinnVerlust(int)
    648:649:public final void setLetzteKostenGesamt(int)
    666:667:public final void setLetzteKostenJugend(int)
    684:685:public final void setLetzteKostenSonstige(int)
    702:703:public final void setLetzteKostenSpieler(int)
    720:721:public final void setLetzteKostenStadion(int)
    738:739:public final void setLetzteKostenTrainerstab(int)
    756:757:public final void setLetzteKostenZinsen(int)
    774:775:public final void setSponsoren(int)
    792:793:public final void setSupporter(int)
de.hattrickorganizer.model.FormulaFactors:
    protected static final int ANZ_FAKTOROBJEKTE
de.hattrickorganizer.model.FuturePlayer
de.hattrickorganizer.model.FutureTrainingWeek
de.hattrickorganizer.model.HOMiniModel:
    78:78:public java.util.Vector getAllOldSpieler()
    89:89:public java.util.Vector getAllSpieler()
    109:109:public java.util.Vector getDBManualTrainingsVector()
    118:118:public plugins.IDownloadHelper getDownloadHelper()
    127:127:public plugins.IEPV getEPV()
    138:138:public plugins.IFinanzen getFinanzen()
    147:147:public plugins.IGUI getGUI()
    156:156:public plugins.IHOFriendlyManager getHOFriendlyManager()
    165:165:public double getHOVersion()
    185:185:public plugins.ILiga getLiga()
    194:194:public plugins.ILineUp getLineUP()
    216:216:public plugins.IMatchLineup getMatchLineup(int)
    225:225:public plugins.IMatchPredictionManager getMatchPredictionManager()
    236:236:public plugins.IMatchKurzInfo[] getMatchesKurzInfo(int)
    249:249:public plugins.IMatchKurzInfo[] getMatchesKurzInfo(int,int,boolean)
    261:261:public java.util.Properties getResource()
    272:272:public plugins.ISpieler getSpieler(int)
    284:284:public plugins.ISpieler getSpielerAtDate(int,java.sql.Timestamp)
    293:293:public plugins.ISpielplan[] getSpielplaene()
    307:307:public plugins.ISpielplan getSpielplan(int,int)
    318:318:public plugins.IStadium getStadium()
    329:329:public plugins.ITeam getTeam()
    338:338:public plugins.ISpieler getTrainer()
    347:347:public plugins.ITrainingsManager getTrainingsManager()
    356:356:public gui.UserParameter getUserSettings()
    367:367:public plugins.IVerein getVerein()
    376:376:public plugins.IXMLParser getXMLParser()
    394:395:public void deleteHRF(int)
    403:404:public void saveTraining(plugins.ITrainingWeek)
    416:417:public plugins.IFutureTrainingManager getFutureTrainingManager(plugins.ISpieler,java.util.List,int,int,int)
    421:421:public java.util.List getFutureTrainingWeeks()
    425:426:public void saveFutureTraining(plugins.IFutureTrainingWeek)
de.hattrickorganizer.model.HOModel:
    148:148:public final de.hattrickorganizer.logik.EPV getEPV()
    177:177:public final de.hattrickorganizer.logik.HOFriendlyManager getHOFriendlyManager()
    506:511:public final void loadStdAufstellung()
    517:522:public final void loadStdLastAufstellung()
de.hattrickorganizer.model.HOVerwaltung:
    55:56:public void setArgs(java.lang.String[])
    262:264:public void loadHoModel(java.lang.String)
    272:273:public void loadHoModel(int)
de.hattrickorganizer.model.Liga:
    102:103:public void setLiga(java.lang.String)
    120:121:public void setPlatzierung(int)
    138:139:public void setPunkte(int)
    156:157:public void setSpieltag(int)
    174:175:public void setToreFuer(int)
    192:193:public void setToreGegen(int)
de.hattrickorganizer.model.MatchScreen:
    public static final int KEY_START
    public static final int KEY_AKTION
    public static final int KEY_ABSCHLUSS_TOR
    public static final int KEY_ABSCHLUSS_VERGEBEN
    public static final java.lang.String VAR_SCHUETZE
    public static final java.lang.String VAR_VORBEREITER1
    public static final java.lang.String VAR_VERTEIDIGER1
    public static final java.lang.String VAR_VERTEIDIGER2
    public static final java.lang.String VAR_TORWART
    public static final java.lang.String VAR_FANTEAM
    public static final java.lang.String VAR_FANMANAGER
    public static final java.lang.String VAR_GEGNERTEAM
    public static final java.lang.String VAR_GEGNERMANAGER
    public static final java.lang.String VAR_AUSWECHSELSPIELER
    public static final java.lang.String VAR_EINWECHSELSPIELER
    public static final java.lang.String VAR_SPIELMINUTE
    public static final java.lang.String VAR_TEAMNAME
    public static final java.lang.String VAR_SPIELERNAME
    public static final java.lang.String CMD_WAIT
    public abstract void setPause(boolean)
    public abstract boolean isPause()
de.hattrickorganizer.model.PlayerSkillup
de.hattrickorganizer.model.Server:
    77:78:public final void setAnzAktionsVarianten(int)
    95:96:public final void setAnzAllgemeineVarianten(int)
    113:114:public final void setAnzSelteneTorVarianten(int)
    149:149:public final de.hattrickorganizer.net.rmiHOFriendly.HOServerImp getHOServer()
    167:167:public final boolean isPause()
    185:185:public final de.hattrickorganizer.model.MatchScreen getScreen1()
    203:203:public final de.hattrickorganizer.model.Spielbericht getSpielbericht()
de.hattrickorganizer.model.ServerSpieler:
    public static final byte BANK_TW
    public static final byte BANK_AB
    public static final byte BANK_MF
    public static final byte BANK_FL
    public static final byte BANK_ST
    public static final byte AUSGEWECHSELT
    312:313:public final void setID(int)
    330:331:public final void setName(java.lang.String)
    550:550:public final int getVerletzt()
de.hattrickorganizer.model.ServerTeam:
    256:257:public final void setElferKicker(int[])
    265:265:public final int[] getElferKicker()
    283:284:public final void setKapitaen(int)
    292:292:public final int getKapitaen()
    301:302:public final void setKicker(int)
    338:339:public final void setManagerName(java.lang.String)
    577:578:public final void setStartAufstellung(java.util.Vector)
    607:608:public final void setTeamName(java.lang.String)
de.hattrickorganizer.model.Spielbericht:
    96:105:public Spielbericht(de.hattrickorganizer.model.ServerTeam,de.hattrickorganizer.model.ServerTeam)
    334:334:public final int getAnzahlKarten()
de.hattrickorganizer.model.Spieler:
    private java.lang.String m_sNotiz
    411:412:public void setAgressivitaet(int)
    429:430:public void setAgressivitaetString(java.lang.String)
    550:551:public void setAnsehen(int)
    568:569:public void setAnsehenString(java.lang.String)
    586:587:public void setBewertung(int)
    619:620:public void setCharakter(int)
    637:638:public void setCharakterString(java.lang.String)
    799:800:public void setGehalt(int)
    844:845:public void setHattrick(int)
    862:862:public java.sql.Timestamp getHrfDate()
    1016:1028:public int getLastLevelUpInTage(int)
    1152:1158:public void setNotiz(java.lang.String)
    1166:1171:public java.lang.String getNotiz()
    1296:1348:public boolean isSkillTrained(int,int)
    1375:1376:public void setSpezialitaetString(java.lang.String)
    1621:1622:public void setToreFreund(int)
    1639:1640:public void setToreGesamt(int)
    1657:1658:public void setToreLiga(int)
    1675:1676:public void setTorePokal(int)
    1776:1799:public double getTrainingOffset4Skill(int)
    2071:2094:public int getValue4Skill4(int)
    2187:2191:public void calcFullSubskills(java.sql.Timestamp,int,int,int,int)
de.hattrickorganizer.model.SpielerPosition:
    public static final byte KEIN_TE
    public static final byte SCHWACHER_TE
    public static final byte VOLLER_TE
    299:349:public static java.lang.String getNameForID(int)
    563:564:public final void setId(int)
de.hattrickorganizer.model.Stadium:
    117:118:public final void setAusbau(boolean)
    135:135:public final boolean isAusbau()
    235:236:public final void setGesamtgroesse(int)
    293:294:public final void setStadienname(java.lang.String)
de.hattrickorganizer.model.Team:
    254:255:public void setErfahrung343(int)
    272:273:public void setErfahrung352(int)
    290:291:public void setErfahrung433(int)
    308:309:public void setErfahrung451(int)
    326:327:public void setErfahrung532(int)
    344:345:public void setErfahrung541(int)
    434:435:public void setTrainingsArt(java.lang.String)
    452:453:public void setTrainingsArtAsInt(int)
    470:471:public void setTrainingslevel(int)
de.hattrickorganizer.model.TrainingPerPlayer:
    156:156:public final plugins.ISpieler getSpieler()
de.hattrickorganizer.model.TrainingPerWeek:
    58:58:public final int getHattrickSeason()
    76:76:public final int getHattrickWeek()
    103:104:public final void setIntensitaet(int)
    121:122:public final void setTyp(int)
de.hattrickorganizer.model.User:
    private static final java.lang.String FILENAME
de.hattrickorganizer.model.Verein:
    165:166:public void setDate(java.sql.Timestamp)
    174:174:public java.sql.Timestamp getDate()
    208:209:public void setFans(int)
    271:271:public int getJugendGeld()
    334:335:public void setSiege(int)
    379:379:public java.lang.String getTeamName()
    410:411:public void setUngeschlagen(int)
    437:437:public boolean isYouthPull()
de.hattrickorganizer.model.XtraData:
    83:84:public final void setCurrencyName(java.lang.String)
    101:102:public final void setCurrencyRate(double)
    119:120:public final void setEconomyDate(java.sql.Timestamp)
    137:138:public final void setHasPromoted(boolean)
    155:156:public final void setLeagueLevelUnitID(int)
    173:174:public final void setLogoURL(java.lang.String)
    191:192:public final void setSeriesMatchDate(java.sql.Timestamp)
    209:210:public final void setTrainingDate(java.sql.Timestamp)
de.hattrickorganizer.model.lineup.LigaTabelle:
    103:103:public final int getLigaId()
    121:121:public final int getLigaLandId()
    139:139:public final java.lang.String getLigaLandName()
    175:175:public final int getMaxAnzahlSpielklassen()
    193:193:public final int getSpielklasse()
    210:227:public final byte getTeamPlatzTendenz(int,plugins.ILigaTabelle)
de.hattrickorganizer.model.lineup.LigaTabellenEintrag:
    450:473:public final byte[] getLastSerie(int)
    518:519:public final void setSerie(byte[])
    527:527:public final byte[] getSerie()
de.hattrickorganizer.model.matches.MatchKurzInfo:
    301:317:public final java.sql.Timestamp getTimestampMatchDate()
de.hattrickorganizer.model.matches.MatchLineup:
    129:145:public final java.sql.Timestamp getFetchDatum()
de.hattrickorganizer.model.matches.MatchLineupPlayer:
    117:118:public final void setFieldPos(int)
    126:126:public final int getFieldPos()
    135:136:public final void setNickName(java.lang.String)
    168:169:public final void setPositionCode(int)
    186:187:public final void setRating(double)
    208:209:public final void setSpielerName(java.lang.String)
    226:227:public final void setSpielerVName(java.lang.String)
    244:245:public final void setStatus(int)
    253:253:public final int getStatus()
    266:272:protected final void setName(java.lang.String)
de.hattrickorganizer.model.matches.MatchLineupTeam:
    78:79:public final void setErfahrung(int)
    138:139:public final void setTeamID(int)
    156:157:public final void setTeamName(java.lang.String)
    183:268:public final byte determinateSystem()
de.hattrickorganizer.model.matches.Matchdetails:
    319:329:public final java.lang.String getFormation(boolean)
    880:906:public final java.util.List getLineup(boolean)
de.hattrickorganizer.model.matchlist.Paarung:
    185:185:public final int getLigaId()
    221:221:public final int getSaison()
de.hattrickorganizer.net.ConvertXml2Hrf:
    719:750:protected final void writeHRF(java.lang.String)
de.hattrickorganizer.net.MyConnector:
    363:363:public java.lang.String getPage(java.lang.String)
    417:417:public boolean isProxyAuthentifactionNeeded()
    435:435:public java.lang.String getProxyHost()
    453:453:public java.lang.String getProxyPort()
    471:471:public java.lang.String getProxyUserName()
    489:489:public java.lang.String getProxyUserPWD()
    668:668:public boolean isUseProxy()
    686:686:public java.lang.String getUserName()
    704:704:public java.lang.String getUserPwd()
    840:857:public java.lang.String fetchRegionID(int)
de.hattrickorganizer.net.rmiHOFriendly.Chat:
    public static final byte NET_CHAT_MSG
    public static final byte NET_CREATEFRIENDLY_MSG
    public static final byte NET_TORCHANCE_MSG
    public static final byte NET_INFO_MSG
    public static final byte NET_KARTE_MSG
    public static final byte NET_VERLETZUNG_MSG
    public static final byte NET_AUSWECHSLUNG_MSG
    public static final byte NET_FANGESANG_MSG
    public static final byte NET_SPIELMINUTE_MSG
    public static final byte NET_SPIELENDE_MSG
    public static final byte NET_BEREIT_MSG
    public static final byte NET_PAUSE_MSG
    public static final byte NET_ABBRUCH_MSG
    public static final byte NET_SPIELBEGINN_MSG
    public abstract void recieveMsg(java.lang.String,java.lang.String,boolean)
    public abstract void sendPause(boolean)
de.hattrickorganizer.net.rmiHOFriendly.HOClientWorker:
    188:188:public final boolean isRun()
de.hattrickorganizer.net.rmiHOFriendly.HOServerImp:
    105:105:public final java.net.Socket getClient()
    153:153:public final boolean isClientPause()
    171:171:public final java.io.DataOutputStream getOutput()
    189:190:public final void setServerSocket(java.net.ServerSocket)
    474:474:public void sendPause(boolean)
de.hattrickorganizer.net.rmiHOFriendly.HoClientImp:
    66:66:public final boolean isAbbruch()
    75:76:public final void setClient(de.hattrickorganizer.model.MatchScreen)
    93:94:public final void setOutput(java.io.DataOutputStream)
    102:102:public final java.io.DataOutputStream getOutput()
    111:112:public final void setPause(boolean)
    120:120:public final boolean isPause()
    129:129:public final boolean isScreenBereit()
    147:147:public final de.hattrickorganizer.model.Spielbericht getSpielbericht()
    263:273:public final void sendPause(boolean)
de.hattrickorganizer.net.rmiHOFriendly.HoServerWorker:
    68:68:public final boolean isRun()
de.hattrickorganizer.net.rmiHOFriendly.MatchFinder:
    62:63:public final void setMatchId(int)
    71:71:public final int getMatchId()
de.hattrickorganizer.net.rmiHOFriendly.NetMatchScreen:
    50:61:public final void setPause(boolean)
    70:75:public final boolean isPause()
de.hattrickorganizer.net.rmiHOFriendly.NetMatchScreen$1
de.hattrickorganizer.net.rmiHOFriendly.ServerVerweis:
    87:88:public final void setInfo(java.lang.String)
    96:96:public final java.lang.String getInfo()
    105:106:public final void setIp(java.lang.String)
    123:124:public final void setPort(int)
de.hattrickorganizer.tools.BrowserLauncher:
    private static final int MRJ_2_0
    private static final int MRJ_2_1
    private static final int MRJ_3_0
    private static final int MRJ_3_1
    private static final int WINDOWS_NT
    private static final int WINDOWS_9x
    private static final int OTHER
    private static final java.lang.String FINDER_TYPE
    private static final java.lang.String FINDER_CREATOR
    private static final java.lang.String GURL_EVENT
    private static final java.lang.String FIRST_WINDOWS_PARAMETER
    private static final java.lang.String SECOND_WINDOWS_PARAMETER
    private static final java.lang.String THIRD_WINDOWS_PARAMETER
    private static final java.lang.String NETSCAPE_REMOTE_PARAMETER
    private static final java.lang.String NETSCAPE_OPEN_PARAMETER_START
    private static final java.lang.String NETSCAPE_OPEN_PARAMETER_END
    static java.lang.Class class$0
de.hattrickorganizer.tools.HRFFileParser:
    private static final java.lang.String ENTITY
    private static final java.lang.String BASICS
    private static final java.lang.String LEAGUE
    private static final java.lang.String CLUB
    private static final java.lang.String TEAM
    private static final java.lang.String LINEUP
    private static final java.lang.String ECONOMY
    private static final java.lang.String ARENA
    private static final java.lang.String PLAYER
    private static final java.lang.String XTRA
    private static final java.lang.String LASTLINEUP
    300:320:private void printProperties(java.util.Vector)
de.hattrickorganizer.tools.Helper:
    902:902:public static java.awt.Image getImageDurchgestrichen(java.awt.Image)
    1714:1714:public static int getRandom(int)
    1919:1937:public static boolean isUserMatch(java.lang.String)
    1993:1999:public static javax.swing.DefaultComboBoxModel createListModel(java.util.Vector)
    2008:2016:public static void debugCacheTest()
    2050:2059:public static void expandTree(javax.swing.JTree)
    2317:2317:public static boolean parseFloat(java.awt.Window,javax.swing.JTextField,boolean)
    2333:2353:public static boolean parseFloat(java.awt.Window,javax.swing.JTextField,boolean,java.text.DecimalFormat)
    2412:2412:public static int[] parseMultiInt(java.awt.Window,javax.swing.JTextField,boolean,int)
    2546:2563:private static java.lang.String kommaToPunkt(java.lang.String)
de.hattrickorganizer.tools.HelperWrapper:
    65:65:public java.awt.Color getColor4SpielHighlight(int,int)
    78:90:public java.util.Date getHattrickDate(java.lang.String)
    102:102:public javax.swing.ImageIcon getImage4Position(int,byte)
    113:113:public javax.swing.ImageIcon getImageIcon4Country(int)
    124:124:public javax.swing.ImageIcon getImageIcon4Spezialitaet(int)
    136:136:public javax.swing.ImageIcon getImageIcon4SpielHighlight(int,int)
    147:147:public javax.swing.ImageIcon getImageIcon4Spieltyp(int)
    158:158:public javax.swing.ImageIcon getImageIcon4Veraenderung(int)
    169:169:public javax.swing.ImageIcon getImageIcon4Wetter(int)
    180:180:public javax.swing.ImageIcon getImageIcon4WetterEffekt(int)
    189:195:public int getLanguageID()
    205:216:public java.lang.String getLanguageName()
    299:299:public java.lang.String getNameForAggressivness(int)
    312:312:public java.lang.String getNameForBewertung(int,boolean,boolean)
    323:323:public java.lang.String getNameForCharacter(int)
    334:334:public java.lang.String getNameForConfidence(int)
    345:345:public java.lang.String getNameForGentleness(int)
    356:356:public java.lang.String getNameForMatchTyp(int)
    367:367:public java.lang.String getNameForPosition(byte)
    390:390:public java.lang.String getNameForSpeciality(int)
    401:401:public java.lang.String getNameForTaktik(int)
    412:412:public java.lang.String getNameForTeamorder(int)
    423:423:public java.lang.String getNameForTeamspirit(int)
    434:434:public java.lang.String getNameForTraining(int)
    496:496:public java.lang.String getTooltiptext4SpielHighlight(int,int)
    507:507:public boolean isUserMatch(java.lang.String)
    516:536:public void addTempSpieler(plugins.ISpieler)
    546:546:public java.lang.String[] convertTimeMillisToFormatString(double[])
    556:557:public void copyArray2Vector(java.lang.Object[],java.util.Vector)
    566:567:public void copyVector2Array(java.util.Vector,java.lang.Object[])
    577:577:public javax.swing.DefaultComboBoxModel createListModel(java.util.Vector)
    590:617:public plugins.ISpieler createSpielerFromText(java.lang.String)
    628:628:public java.lang.String decodeStringFromDatabase(java.lang.String)
    639:639:public java.lang.String deleteEscapeSequences(java.lang.String)
    651:702:public boolean downloadMatchData(int)
    713:713:public java.lang.String encodeString4Database(java.lang.String)
    724:724:public boolean existsMatchInDB(int)
    735:735:public int[] generateIntArray(java.lang.String)
    747:747:public java.lang.String[] generateStringArray(java.lang.String,char)
    754:755:public void importHRF()
    765:765:public java.lang.String insertEscapeSequences(java.lang.String)
    776:776:public java.awt.image.BufferedImage loadImage(java.lang.String)
    788:788:public java.awt.Image makeColorTransparent(java.awt.Image,java.awt.Color)
    806:806:public java.awt.Image makeColorTransparent(java.awt.Image,int,int,int,int,int,int)
    816:819:public void openUrlInUserBRowser(java.lang.String)
    829:829:public java.sql.Timestamp parseDate(java.lang.String)
    841:841:public float round(double,int)
    865:865:public int[][] sortintArray(int[][],int)
de.hattrickorganizer.tools.Logger:
    public static final int Information
    public static final int Warning
    public static final int Error
    82:82:public boolean isVerbose()
    105:106:public void log(java.lang.Class,java.lang.String)
    115:116:public void log(java.lang.Class,int)
    125:126:public void log(java.lang.Class,java.lang.Object)
    136:137:public void log(java.lang.Class,int,int)
    147:148:public void log(java.lang.Class,java.lang.Object,int)
    158:181:public void log(java.lang.Class,java.lang.String,int)
    191:204:public boolean save(java.lang.String)
de.hattrickorganizer.tools.MyHelper:
    72:75:public static void addVector2Vector(java.util.Vector,java.util.Vector)
    299:314:public static java.lang.String replaceSubString(java.lang.String[],java.lang.String[],java.lang.String)
de.hattrickorganizer.tools.updater.HPLanguageInfo:
    private static final java.lang.String TAG_FILE
    private static final java.lang.String TAG_ID
    private static final java.lang.String TAG_VERSION
    68:68:protected int getId()
de.hattrickorganizer.tools.updater.HPPluginInfo:
    private java.lang.String className
    66:66:protected java.lang.String getClassName()
de.hattrickorganizer.tools.updater.TableEditor:
    66:66:public boolean isCellEditable()
    126:127:public void add(int,javax.swing.table.TableCellEditor)
de.hattrickorganizer.tools.updater.UpdateController:
    public static final java.lang.String PLUGINS_HOMEPAGE
    protected static final java.lang.String WEB_FLAGSFILE
    protected static final java.lang.String WEB_PLUGINFILE
de.hattrickorganizer.tools.updater.XMLPLuginInfo:
    private static final java.lang.String TAG_PLUGIN_ID
    private static final java.lang.String TAG_MYPLUGIN_ID
    private static final java.lang.String TAG_DEPENDENCY
    private de.hattrickorganizer.tools.updater.HPPluginInfo hppPluginInfo
    68:69:protected final void setHppPluginInfo(de.hattrickorganizer.tools.updater.HPPluginInfo)
    77:77:protected final de.hattrickorganizer.tools.updater.HPPluginInfo getHppPluginInfo()
de.hattrickorganizer.tools.xml.XMLManager:
    173:189:public org.w3c.dom.Document parseFile(java.io.File)
    266:292:protected void parseTabelle(org.w3c.dom.Document)
gui.UserParameter:
    public static final int SORT_NAME
    public static final int SORT_BESTPOS
    public static final int SORT_AUFGESTELLT
    public static final int SORT_GRUPPE
    public static final int SORT_BEWERTUNG
    public boolean statistikFans
    static java.lang.Class class$0
    static java.lang.Class class$1
    649:672:public void load()
    681:712:public void save()
    722:729:private java.io.File getFile()
    744:774:private void setValue(java.lang.reflect.Field,gui.UserParameter,java.util.Properties)
    787:813:private java.lang.String getValue(java.lang.reflect.Field,gui.UserParameter)
plugins.IBasics:
    public abstract void setDatum(java.sql.Timestamp)
    public abstract java.sql.Timestamp getDatum()
    public abstract void setLand(int)
    public abstract int getLand()
    public abstract void setLiga(int)
    public abstract int getLiga()
    public abstract void setManager(java.lang.String)
    public abstract java.lang.String getManager()
    public abstract void setSeason(int)
    public abstract void setSpieltag(int)
    public abstract void setTeamId(int)
    public abstract void setTeamName(java.lang.String)
    public abstract java.lang.String getTeamName()
plugins.IDebugWindow:
    public abstract void setLocation(java.awt.Point)
    public abstract void setSize(java.awt.Dimension)
    public abstract void clear()
plugins.IDownloadHelper
plugins.IEPV
plugins.IEPVData
plugins.IFinanzen
plugins.IFuturePlayer
plugins.IFutureTrainingManager
plugins.IFutureTrainingWeek
plugins.IGUI
plugins.IHOFriendlyManager
plugins.IHOMiniModel:
    public abstract java.util.Vector getAllOldSpieler()
    public abstract java.util.Vector getAllSpieler()
    public abstract java.util.Vector getDBManualTrainingsVector()
    public abstract plugins.IDownloadHelper getDownloadHelper()
    public abstract plugins.IEPV getEPV()
    public abstract plugins.IFinanzen getFinanzen()
    public abstract plugins.IGUI getGUI()
    public abstract plugins.IHOFriendlyManager getHOFriendlyManager()
    public abstract double getHOVersion()
    public abstract plugins.ILiga getLiga()
    public abstract plugins.ILineUp getLineUP()
    public abstract plugins.IMatchLineup getMatchLineup(int)
    public abstract plugins.IMatchPredictionManager getMatchPredictionManager()
    public abstract plugins.IMatchKurzInfo[] getMatchesKurzInfo(int)
    public abstract plugins.IMatchKurzInfo[] getMatchesKurzInfo(int,int,boolean)
    public abstract java.util.Properties getResource()
    public abstract plugins.ISpieler getSpieler(int)
    public abstract plugins.ISpieler getSpielerAtDate(int,java.sql.Timestamp)
    public abstract plugins.ISpielplan[] getSpielplaene()
    public abstract plugins.ISpielplan getSpielplan(int,int)
    public abstract plugins.IStadium getStadium()
    public abstract plugins.ITeam getTeam()
    public abstract plugins.ISpieler getTrainer()
    public abstract plugins.ITrainingsManager getTrainingsManager()
    public abstract gui.UserParameter getUserSettings()
    public abstract plugins.IVerein getVerein()
    public abstract plugins.IXMLParser getXMLParser()
    public abstract void deleteHRF(int)
    public abstract void saveTraining(plugins.ITrainingWeek)
    public abstract plugins.IFutureTrainingManager getFutureTrainingManager(plugins.ISpieler,java.util.List,int,int,int)
    public abstract java.util.List getFutureTrainingWeeks()
    public abstract void saveFutureTraining(plugins.IFutureTrainingWeek)
plugins.IHOTableEntry:
    public abstract javax.swing.JComponent getComponent(boolean)
    public abstract void clear()
    public abstract int compareTo(java.lang.Object)
    public abstract void createComponent()
    public abstract void updateComponent()
plugins.IHelper:
    public abstract java.awt.Color getColor4SpielHighlight(int,int)
    public abstract java.util.Date getHattrickDate(java.lang.String)
    public abstract javax.swing.ImageIcon getImage4Position(int,byte)
    public abstract javax.swing.ImageIcon getImageIcon4Country(int)
    public abstract javax.swing.ImageIcon getImageIcon4Spezialitaet(int)
    public abstract javax.swing.ImageIcon getImageIcon4SpielHighlight(int,int)
    public abstract javax.swing.ImageIcon getImageIcon4Spieltyp(int)
    public abstract javax.swing.ImageIcon getImageIcon4Veraenderung(int)
    public abstract javax.swing.ImageIcon getImageIcon4Wetter(int)
    public abstract javax.swing.ImageIcon getImageIcon4WetterEffekt(int)
    public abstract int getLanguageID()
    public abstract java.lang.String getLanguageName()
    public abstract java.util.Calendar getLastTrainingDate(java.util.Date,java.util.Date)
    public abstract java.lang.String getNameForAggressivness(int)
    public abstract java.lang.String getNameForBewertung(int,boolean,boolean)
    public abstract java.lang.String getNameForCharacter(int)
    public abstract java.lang.String getNameForConfidence(int)
    public abstract java.lang.String getNameForGentleness(int)
    public abstract java.lang.String getNameForMatchTyp(int)
    public abstract java.lang.String getNameForPosition(byte)
    public abstract java.lang.String getNameForSpeciality(int)
    public abstract java.lang.String getNameForTaktik(int)
    public abstract java.lang.String getNameForTeamorder(int)
    public abstract java.lang.String getNameForTeamspirit(int)
    public abstract java.lang.String getNameForTraining(int)
    public abstract java.util.Vector getPlugins()
    public abstract java.lang.String getTooltiptext4SpielHighlight(int,int)
    public abstract boolean isUserMatch(java.lang.String)
    public abstract void addTempSpieler(plugins.ISpieler)
    public abstract java.lang.String[] convertTimeMillisToFormatString(double[])
    public abstract void copyArray2Vector(java.lang.Object[],java.util.Vector)
    public abstract void copyVector2Array(java.util.Vector,java.lang.Object[])
    public abstract javax.swing.DefaultComboBoxModel createListModel(java.util.Vector)
    public abstract plugins.ISpieler createSpielerFromText(java.lang.String)
    public abstract java.lang.String decodeStringFromDatabase(java.lang.String)
    public abstract java.lang.String deleteEscapeSequences(java.lang.String)
    public abstract boolean downloadMatchData(int)
    public abstract java.lang.String encodeString4Database(java.lang.String)
    public abstract boolean existsMatchInDB(int)
    public abstract int[] generateIntArray(java.lang.String)
    public abstract java.lang.String[] generateStringArray(java.lang.String,char)
    public abstract void importHRF()
    public abstract java.lang.String insertEscapeSequences(java.lang.String)
    public abstract java.awt.image.BufferedImage loadImage(java.lang.String)
    public abstract java.awt.Image makeColorTransparent(java.awt.Image,java.awt.Color)
    public abstract java.awt.Image makeColorTransparent(java.awt.Image,int,int,int,int,int,int)
    public abstract void openUrlInUserBRowser(java.lang.String)
    public abstract java.sql.Timestamp parseDate(java.lang.String)
    public abstract float round(double,int)
    public abstract int[][] sortintArray(int[][],int)
plugins.IInfoPanel:
    public abstract void setKurzInfoText(java.lang.String)
    public abstract void setLangInfoText(java.lang.String)
    public abstract void setLangInfoText(java.lang.String,java.awt.Color)
    public abstract void changeProgressbarValue(int)
    public abstract void clearAll()
    public abstract void clearKurzInfo()
    public abstract void clearProgressbar()
plugins.ILiga
plugins.ILigaTabelle:
    public abstract plugins.ILigaTabellenEintrag getEintragByTeamId(int)
    public abstract int getLigaId()
    public abstract int getLigaLandId()
    public abstract java.lang.String getLigaLandName()
    public abstract int getMaxAnzahlSpielklassen()
    public abstract int getSpielklasse()
    public abstract byte getTeamPlatzTendenz(int,plugins.ILigaTabelle)
    public abstract void sort()
plugins.ILigaTabellenEintrag:
    public static final byte H_SIEG
    public static final byte A_SIEG
    public static final byte H_UN
    public static final byte A_UN
    public static final byte H_NIED
    public static final byte A_NIED
    public static final byte UNKOWN
    public abstract int getA_Nied()
    public abstract int getA_Punkte()
    public abstract int getA_Siege()
    public abstract int getA_ToreFuer()
    public abstract int getA_ToreGegen()
    public abstract int getA_Un()
    public abstract int getAltePosition()
    public abstract int getAnzSpiele()
    public abstract int getAwayTorDiff()
    public abstract int getG_Nied()
    public abstract int getG_Siege()
    public abstract int getG_Un()
    public abstract int getGesamtTorDiff()
    public abstract int getH_Nied()
    public abstract int getH_Punkte()
    public abstract int getH_Siege()
    public abstract int getH_ToreFuer()
    public abstract int getH_ToreGegen()
    public abstract int getH_Un()
    public abstract int getHeimTorDiff()
    public abstract byte[] getLastSerie(int)
    public abstract int getPunkte()
    public abstract byte[] getSerie()
    public abstract java.lang.String getSerieAsString()
    public abstract int getTeamId()
    public abstract java.lang.String getTeamName()
    public abstract int getToreFuer()
    public abstract int getToreGegen()
plugins.ILineUp
plugins.IMPActions
plugins.IMPMatchData
plugins.IMPTeamData
plugins.IMPTeamRatings
plugins.IMatchDetails:
    public static final int EINSTELLUNG_UNBEKANNT
    public static final int EINSTELLUNG_PIC
    public static final int EINSTELLUNG_NORMAL
    public static final int EINSTELLUNG_MOTS
    public static final int WETTER_REGEN
    public static final int WETTER_BEWOELKT
    public static final int WETTER_WOLKIG
    public static final int WETTER_SONNE
    public static final int TAKTIK_NORMAL
    public static final int TAKTIK_PRESSING
    public static final int TAKTIK_KONTER
    public static final int TAKTIK_MIDDLE
    public static final int TAKTIK_WINGS
    public static final int TAKTIK_CREATIVE
    public abstract int getArenaID()
    public abstract java.lang.String getArenaName()
    public abstract java.sql.Timestamp getFetchDatum()
    public abstract java.lang.String getFormation(boolean)
    public abstract java.lang.String getGastName()
    public abstract int getGuestEinstellung()
    public abstract int getGuestGoals()
    public abstract int getGuestLeftAtt()
    public abstract int getGuestLeftDef()
    public abstract int getGuestMidAtt()
    public abstract int getGuestMidDef()
    public abstract int getGuestMidfield()
    public abstract int getGuestRightAtt()
    public abstract int getGuestRightDef()
    public abstract int getGuestTacticSkill()
    public abstract int getGuestTacticType()
    public abstract java.lang.String getHeimName()
    public abstract java.util.Vector getHighlights()
    public abstract int getHomeEinstellung()
    public abstract int getHomeGoals()
    public abstract int getHomeLeftAtt()
    public abstract int getHomeLeftDef()
    public abstract int getHomeMidAtt()
    public abstract int getHomeMidDef()
    public abstract int getHomeMidfield()
    public abstract int getHomeRightAtt()
    public abstract int getHomeRightDef()
    public abstract int getHomeTacticSkill()
    public abstract int getHomeTacticType()
    public abstract java.util.List getLineup(boolean)
    public abstract int getMatchID()
    public abstract java.lang.String getMatchreport()
    public abstract int getWetterId()
    public abstract int getZuschauer()
plugins.IMatchHighlight
plugins.IMatchKurzInfo:
    public static final int FINISHED
    public static final int UPCOMING
    public static final int ONGOING
    public abstract boolean isAufstellung()
    public abstract int getGastID()
    public abstract java.lang.String getGastName()
    public abstract int getGastTore()
    public abstract java.lang.String getHeimName()
    public abstract int getHeimTore()
    public abstract java.lang.String getMatchDate()
    public abstract int getMatchID()
    public abstract int getMatchTyp()
    public abstract java.sql.Timestamp getTimestampMatchDate()
plugins.IMatchLineup
plugins.IMatchLineupPlayer:
    public static final int STANDARDS
    public static final int CAPITAN_ROLEID
    public static final int EINWECHSEL1
    public static final int EINWECHSEL2
    public static final int EINWECHSEL3
    public static final int SENT_OFF
    public static final int SUBSTITUTED
    public abstract int getFieldPos()
    public abstract int getId()
    public abstract java.lang.String getNickName()
    public abstract byte getPosition()
    public abstract int getPositionCode()
    public abstract int getSortId()
    public abstract java.lang.String getSpielerName()
    public abstract java.lang.String getSpielerVName()
    public abstract int getStatus()
plugins.IMatchLineupTeam:
    public abstract java.util.Vector getAufstellung()
    public abstract int getErfahrung()
    public abstract plugins.IMatchLineupPlayer getPlayerByID(int)
    public abstract plugins.IMatchLineupPlayer getPlayerByPosition(int)
    public abstract int getTeamID()
    public abstract java.lang.String getTeamName()
    public abstract byte determinateSystem()
plugins.IMatchPredictionManager
plugins.IMatchPredictionPanel
plugins.IOfficialPlugin:
    public abstract java.lang.String getPluginName()
plugins.IPaarung:
    public abstract java.sql.Timestamp getDatum()
    public abstract int getGastId()
    public abstract java.lang.String getGastName()
    public abstract java.lang.String getHeimName()
    public abstract int getLigaId()
    public abstract int getMatchId()
    public abstract int getSaison()
    public abstract java.lang.String getStringDate()
    public abstract boolean hatStattgefunden()
plugins.IPlugin:
    public static final double VERSION
plugins.ISkillup
plugins.ISpielePanel
plugins.ISpieler:
    public static final int BALLZAUBERER
    public static final int SCHNELL
    public static final int DURCHSETZUGNSSTARK
    public static final int UNBERECHENBAR
    public static final int KOPFBALLSTARK
    public static final int SONNIG
    public static final int LEICHTBEWOELKT
    public static final int BEWOELKT
    public static final int REGEN
    public static final int goettlich
    public static final int galaktisch
    public static final int maerchenhaft
    public static final int mythisch
    public static final int ausserirdisch
    public static final int gigantisch
    public static final int uebernatuerlich
    public static final int Weltklasse
    public static final int fantastisch
    public static final int brilliant
    public static final int grossartig
    public static final int hervorragend
    public static final int sehr_gut
    public static final int gut
    public static final int passabel
    public static final int durchschnittlich
    public static final int schwach
    public static final int armselig
    public static final int erbaermlich
    public static final int katastrophal
    public static final int TA_EXTERNALATTACK
    public static final int ALLGEMEIN
    public static final int KONDITION
    public static final int STANDARDS
    public static final int VERTEIDIGUNG
    public static final int CHANCENVERWERTUNG
    public static final int FLUEGELSPIEL
    public static final int SCHUSSTRAINING
    public static final int PASSPIEL
    public static final int SPIELAUFBAU
    public static final int TORWART
    public static final int TA_ABWEHRVERHALTEN
    public static final int TA_STEILPAESSE
    public static final int BL_Integrationsfigur
    public static final int BL_beliebt
    public static final int BL_sympathisch
    public static final int BL_angenehm
    public static final int BL_umstritten
    public static final int BL_Ekel
    public static final int CK_herzensgut
    public static final int CK_rechtschaffen
    public static final int CK_aufrichtig
    public static final int CK_ehrlich
    public static final int CK_unehrlich
    public static final int CK_niedertraechtig
    public static final int PS_aufbrausend
    public static final int PS_temparamentvoll
    public static final int PS_ausgeglichen
    public static final int PS_ruhig
    public static final int PS_introvertiert
    public static final int SKILL_TORWART
    public static final int SKILL_VERTEIDIGUNG
    public static final int SKILL_FLUEGEL
    public static final int SKILL_SPIELAUFBAU
    public static final int SKILL_TORSCHUSS
    public static final int SKILL_PASSSPIEL
    public static final int SKILL_KONDITION
    public static final int SKILL_FORM
    public static final int SKILL_STANDARDS
    public static final int SKILL_EXPIERIENCE
    public abstract void setAgressivitaet(int)
    public abstract int getAgressivitaet()
    public abstract void setAgressivitaetString(java.lang.String)
    public abstract java.lang.String getAgressivitaetString()
    public abstract void setAlter(int)
    public abstract void setAnsehen(int)
    public abstract int getAnsehen()
    public abstract void setAnsehenString(java.lang.String)
    public abstract java.lang.String getAnsehenString()
    public abstract void setBewertung(int)
    public abstract int getBewertung()
    public abstract int getBonus()
    public abstract void setCharakter(int)
    public abstract int getCharakter()
    public abstract void setCharakterString(java.lang.String)
    public abstract java.lang.String getCharakterString()
    public abstract int getDauerTraining(int,int,int,int,int)
    public abstract void setErfahrung(int)
    public abstract float getErfahrungsBonus(float)
    public abstract void setFluegelspiel(int)
    public abstract void setForm(int)
    public abstract void setFuehrung(int)
    public abstract int getFuehrung()
    public abstract void setGehalt(int)
    public abstract int getGehalt()
    public abstract void setGelbeKarten(int)
    public abstract void setHattrick(int)
    public abstract int getHattrick()
    public abstract java.sql.Timestamp getHrfDate()
    public abstract float getIdealPosStaerke(boolean)
    public abstract byte getIdealPosition()
    public abstract void setKondition(int)
    public abstract void setLaenderspiele(int)
    public abstract int getLaenderspiele()
    public abstract int getLastLevelUpInTage(int)
    public abstract int getLetzteBewertung()
    public abstract void setManuellerSmilie(java.lang.String)
    public abstract java.lang.String getManuellerSmilie()
    public abstract void setMarkwert(int)
    public abstract void setName(java.lang.String)
    public abstract void setNationalitaet(int)
    public abstract int getNationalitaet()
    public abstract void setNotiz(java.lang.String)
    public abstract java.lang.String getNotiz()
    public abstract void setPasspiel(int)
    public abstract boolean isSkillTrained(int,int)
    public abstract void setSpezialitaet(int)
    public abstract void setSpezialitaetString(java.lang.String)
    public abstract java.lang.String getSpezialitaetString()
    public abstract void setSpielaufbau(int)
    public abstract void setSpielberechtigt(boolean)
    public abstract boolean isSpielberechtigt()
    public abstract void setStandards(int)
    public abstract void setTeamInfoSmilie(java.lang.String)
    public abstract void setToreFreund(int)
    public abstract int getToreFreund()
    public abstract void setToreGesamt(int)
    public abstract int getToreGesamt()
    public abstract void setToreLiga(int)
    public abstract int getToreLiga()
    public abstract void setTorePokal(int)
    public abstract int getTorePokal()
    public abstract void setTorschuss(int)
    public abstract void setTorwart(int)
    public abstract void setTrainer(int)
    public abstract int getTrainer()
    public abstract boolean isTrainer()
    public abstract void setTrainerTyp(int)
    public abstract int getTrainerTyp()
    public abstract double getTrainingOffset4Skill(int)
    public abstract void setTrainingsOffsetFluegelspiel(double)
    public abstract void setTrainingsOffsetPasspiel(double)
    public abstract void setTrainingsOffsetSpielaufbau(double)
    public abstract void setTrainingsOffsetStandards(double)
    public abstract void setTrainingsOffsetTorschuss(double)
    public abstract void setTrainingsOffsetVerteidigung(double)
    public abstract void setTransferlisted(int)
    public abstract void setTrikotnummer(int)
    public abstract void setU20Laenderspiele(int)
    public abstract int getU20Laenderspiele()
    public abstract void setUserPosFlag(byte)
    public abstract byte getUserPosFlag()
    public abstract int getValue4Skill4(int)
    public abstract void setVerletzt(int)
    public abstract void setVerteidigung(int)
    public abstract int getWetterEffekt(int)
    public abstract float calcFormFaktor()
    public abstract float calcKapitaensValue()
plugins.ISpielerComboboxItem:
    public abstract float getPositionsBewertung()
    public abstract plugins.ISpieler getSpieler()
    public abstract java.lang.String getText()
    public abstract void setValues(java.lang.String,float,plugins.ISpieler)
    public abstract int compareTo(java.lang.Object)
plugins.ISpielerPosition
plugins.ISpielplan
plugins.IStadium
plugins.ITeam
plugins.ITeamLineup:
    public static final int KEEPER
    public static final int DEFENCE
    public static final int MIDFIELD
    public static final int ATTACK
    public abstract void add(java.lang.String,int)
plugins.ITrainingPerPlayer:
    public abstract double getKO()
    public abstract plugins.ISpieler getSpieler()
plugins.ITrainingPoint
plugins.ITrainingWeek:
    public abstract int getHattrickSeason()
    public abstract int getHattrickWeek()
    public abstract void setIntensitaet(int)
    public abstract void setTyp(int)
plugins.ITrainingsManager
plugins.IVerein
plugins.IXMLParser
plugins.IXtraData:
    public abstract void setCurrencyName(java.lang.String)
    public abstract java.lang.String getCurrencyName()
    public abstract void setCurrencyRate(double)
    public abstract double getCurrencyRate()
    public abstract void setEconomyDate(java.sql.Timestamp)
    public abstract java.sql.Timestamp getEconomyDate()
    public abstract void setHasPromoted(boolean)
    public abstract boolean isHasPromoted()
    public abstract void setLeagueLevelUnitID(int)
    public abstract int getLeagueLevelUnitID()
    public abstract void setLogoURL(java.lang.String)
    public abstract java.lang.String getLogoURL()
    public abstract void setSeriesMatchDate(java.sql.Timestamp)
    public abstract void setTrainingDate(java.sql.Timestamp)
plugins.LineupPanel
