# Default properties file
# This file is included in SVN and should be usable by all developers
# Please put your local changes to AntBuild-Local.properties

# Where do all outputs go to, this is normally the $basedir
# Can be overridden via Ant command line (-Doutput-basedir=xxx) if needed
output-basedir=${basedir}

tmp=${java.io.tmpdir}/build.tmp-eclipse-HO1
tmp-target=${tmp}/target

bin-dir=${output-basedir}/bin
build-dir=${output-basedir}/build
debug-dir=${output-basedir}/debug

export-zip-dir=${output-basedir}/export-zip

export-dmg-basedir=${output-basedir}/export-dmg
export-dmg-templatefile=${export-dmg-basedir}/HO.template.dmg
export-dmg-targetfile=${export-dmg-basedir}/HO.dmg
export-dmg-sourcedir=${export-dmg-basedir}/source
export-dmg-backgrounddir=${export-dmg-basedir}/background
export-dmg-targetdir=${export-dmg-basedir}/target
export-dmg-imagedir=${export-dmg-basedir}/images
export-dmg-mountdir=${export-dmg-basedir}/hfsmount

# NSIS Properties:
# We use the unicode version of NSIS. Unfortunately, it does not compile for linux, 
# therefore we need to emulate a windows environment using wine for linux
# #		windows: nsis-command = "c:/<PATH_TO_UNICODE_NSIS>/makensis.exe"/>
# linux:   nsis-command = "wine c:/<PATH_TO_UNICODE_NSIS>/makensis.exe"/>
nsis-command=wine c:/Programme/NSIS/Unicode/makensis.exe
nsis-directory=${src-dir}/conf/nsis
nsis-scriptName=${nsis-directory}/makeWinInstaller.nsi
nsis-confPath=${nsis-directory}
nsis-export-dir=${output-basedir}/export-w32installer
nsis-JRE-DistPath=java.dist
nsis-JRE-Version=6u11
nsis-JRE-DistFile=jre-${nsis-JRE-Version}-windows-i586-p-s.exe

manifestFile=${src-dir}/conf/MANIFEST.MF

# If svn is not in your path, please adjust the following property
# (i.e. add the path like "/usr/bin/svn") in AntBuild-Local.properties
svn-command=svn

# These default plugins are always build for a HO release
allPlugins.Release=Commons,Feedback,TeamAnalyzer,TrainingExperience,Transfers

# You can add additional plugins if we build a DEV or PRIVATE build
# By default, the same plugins are build
# Override in AntBuild-Local.properties
allPlugins.Dev=${allPlugins.Release}